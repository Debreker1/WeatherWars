{
  "contractName": "WeatherContract",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "temperature",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "description",
          "type": "string"
        }
      ],
      "name": "NewOraclizeQuery",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "temperature",
          "type": "string"
        }
      ],
      "name": "NewTemperature",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "update",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_myid\",\"type\":\"bytes32\"},{\"name\":\"_result\",\"type\":\"string\"},{\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"temperature\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"description\",\"type\":\"string\"}],\"name\":\"NewOraclizeQuery\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"temperature\",\"type\":\"string\"}],\"name\":\"NewTemperature\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/debreker/Dev/school/WeatherWars/contracts/WeatherContract.sol\":\"WeatherContract\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/debreker/Dev/school/WeatherWars/contracts/WeatherContract.sol\":{\"keccak256\":\"0x87a6335fa950fffdfddc8528284c4611a55452909fbf4931aa24685bed2a475a\",\"urls\":[\"bzzr://bb8ff8c2e1356d6095f0139acac8327b51eaa93d214619baccb648df363e705c\"]},\"/home/debreker/Dev/school/WeatherWars/contracts/oraclizeAPI_0.5.sol\":{\"keccak256\":\"0xcd261874f754138701bf670f00fc2e22a09c481989dbd1ad816adb3502c09183\",\"urls\":[\"bzzr://7adfd030d898c545f01a280397ac296f6683927a24bfcb7f93431a21a6cd4f06\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611710806100756000396000f3fe608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461006757806338bbfa5014610139578063a2e62045146102a2578063adccea12146102ac575b600080fd5b34801561007357600080fd5b506101376004803603604081101561008a57600080fd5b8101908080359060200190929190803590602001906401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102d7565b005b34801561014557600080fd5b506102a06004803603606081101561015c57600080fd5b81019080803590602001909291908035906020019064010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021a57600080fd5b82018360208201111561022c57600080fd5b8035906020019184600183028401116401000000008311171561024e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103c7565b005b6102aa6103cc565b005b3480156102b857600080fd5b506102c16104d1565b6040518082815260200191505060405180910390f35b6102df6104d7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031857600080fd5b7f738c4fab4f4c556f6f79d8da6d0302ddaf21484a09f30494d74d5ef496955f82816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561037a57808201518184015260208101905061035f565b50505050905090810190601f1680156103a75780820380516001836020036101000a031916815260200191505b509250505060405180910390a16103bd8161084a565b6005819055505050565b505050565b7f096835e36c2ccea88ff2b3aca87dfc938b977e52ea656873ff76a8dba50d4d346040518080602001828103825260278152602001807f5175657279207761732073656e742077616974696e6720666f7220726573706f81526020017f6e73652e2e2e2e0000000000000000000000000000000000000000000000000081525060400191505060405180910390a16104ce6040805190810160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040805190810160405280601881526020017f54656d706572617475726520696e20526f7474657264616d000000000000000081525061085e565b50565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061055f5750600061055d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e17565b145b156105705761056e6000610e22565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d602081101561062057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561078757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505050506040513d602081101561073657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561080a57600080fd5b505afa15801561081e573d6000803e3d6000fd5b505050506040513d602081101561083457600080fd5b8101908080519060200190929190505050905090565b6000610857826000610e33565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806108e6575060006108e4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e17565b145b156108f7576108f56000610e22565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561097d57600080fd5b505af1158015610991573d6000803e3d6000fd5b505050506040513d60208110156109a757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b0e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a9357600080fd5b505af1158015610aa7573d6000803e3d6000fd5b505050506040513d6020811015610abd57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb9578082015181840152602081019050610b9e565b50505050905090810190601f168015610be65780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610c0557600080fd5b505af1158015610c19573d6000803e3d6000fd5b505050506040513d6020811015610c2f57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610c66576000600102915050610e11565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610d1d578082015181840152602081019050610d02565b50505050905090810190601f168015610d4a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610d83578082015181840152602081019050610d68565b50505050905090810190601f168015610db05780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610dd157600080fd5b505af1158015610de5573d6000803e3d6000fd5b50505050506040513d6020811015610dfc57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610e2c6110ce565b9050919050565b600060608390506000809050600080905060008090505b83518110156110af5760308482815181101515610e6357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1610158015610f61575060398482815181101515610eed57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1611155b15611015578115610f84576000861415610f7a576110af565b8580600190039650505b600a8302925060308482815181101515610f9a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1603830192506110a2565b602e848281518110151561102557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1614156110a157600191505b5b8080600101915050610e4a565b5060008511156110c25784600a0a820291505b81935050505092915050565b6000806110ee731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e17565b111561119057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111876040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611625565b60019050611622565b60006111af73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e17565b11156112515773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112486040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611625565b60019050611622565b600061127073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e17565b11156113125773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113096040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611625565b60019050611622565b600061133173146500cfd35b22e4a392fe0adc06de1a1368ed48610e17565b11156113d35773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113ca6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611625565b60019050611622565b60006113f273a2998efd205fb9d4b4963afb70778d6354ad3a41610e17565b11156114945773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061148b6040805190810160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611625565b60019050611622565b60006114b3736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e17565b111561151757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611622565b60006115367320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e17565b111561159a577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611622565b60006115b97351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e17565b111561161d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611622565b600090505b90565b806002908051906020019061163b92919061163f565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061168057805160ff19168380011785556116ae565b828001600101855582156116ae579182015b828111156116ad578251825591602001919060010190611692565b5b5090506116bb91906116bf565b5090565b6116e191905b808211156116dd5760008160009055506001016116c5565b5090565b9056fea165627a7a72305820a61b7ac4be0c7b6a1c5460c2cd701e3a35040b5c7ad867c37ea0c12e5a40967d0029",
  "deployedBytecode": "0x608060405260043610610062576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806327dc297e1461006757806338bbfa5014610139578063a2e62045146102a2578063adccea12146102ac575b600080fd5b34801561007357600080fd5b506101376004803603604081101561008a57600080fd5b8101908080359060200190929190803590602001906401000000008111156100b157600080fd5b8201836020820111156100c357600080fd5b803590602001918460018302840111640100000000831117156100e557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102d7565b005b34801561014557600080fd5b506102a06004803603606081101561015c57600080fd5b81019080803590602001909291908035906020019064010000000081111561018357600080fd5b82018360208201111561019557600080fd5b803590602001918460018302840111640100000000831117156101b757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561021a57600080fd5b82018360208201111561022c57600080fd5b8035906020019184600183028401116401000000008311171561024e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103c7565b005b6102aa6103cc565b005b3480156102b857600080fd5b506102c16104d1565b6040518082815260200191505060405180910390f35b6102df6104d7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561031857600080fd5b7f738c4fab4f4c556f6f79d8da6d0302ddaf21484a09f30494d74d5ef496955f82816040518080602001828103825283818151815260200191508051906020019080838360005b8381101561037a57808201518184015260208101905061035f565b50505050905090810190601f1680156103a75780820380516001836020036101000a031916815260200191505b509250505060405180910390a16103bd8161084a565b6005819055505050565b505050565b7f096835e36c2ccea88ff2b3aca87dfc938b977e52ea656873ff76a8dba50d4d346040518080602001828103825260278152602001807f5175657279207761732073656e742077616974696e6720666f7220726573706f81526020017f6e73652e2e2e2e0000000000000000000000000000000000000000000000000081525060400191505060405180910390a16104ce6040805190810160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040805190810160405280601881526020017f54656d706572617475726520696e20526f7474657264616d000000000000000081525061085e565b50565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148061055f5750600061055d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e17565b145b156105705761056e6000610e22565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b1580156105f657600080fd5b505af115801561060a573d6000803e3d6000fd5b505050506040513d602081101561062057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561078757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561070c57600080fd5b505af1158015610720573d6000803e3d6000fd5b505050506040513d602081101561073657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801561080a57600080fd5b505afa15801561081e573d6000803e3d6000fd5b505050506040513d602081101561083457600080fd5b8101908080519060200190929190505050905090565b6000610857826000610e33565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806108e6575060006108e4600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610e17565b145b156108f7576108f56000610e22565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801561097d57600080fd5b505af1158015610991573d6000803e3d6000fd5b505050506040513d60208110156109a757600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610b0e57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015610a9357600080fd5b505af1158015610aa7573d6000803e3d6000fd5b505050506040513d6020811015610abd57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610bb9578082015181840152602081019050610b9e565b50505050905090810190601f168015610be65780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b158015610c0557600080fd5b505af1158015610c19573d6000803e3d6000fd5b505050506040513d6020811015610c2f57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610c66576000600102915050610e11565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b83811015610d1d578082015181840152602081019050610d02565b50505050905090810190601f168015610d4a5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b83811015610d83578082015181840152602081019050610d68565b50505050905090810190601f168015610db05780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b158015610dd157600080fd5b505af1158015610de5573d6000803e3d6000fd5b50505050506040513d6020811015610dfc57600080fd5b81019080805190602001909291905050509150505b92915050565b6000813b9050919050565b6000610e2c6110ce565b9050919050565b600060608390506000809050600080905060008090505b83518110156110af5760308482815181101515610e6357fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1610158015610f61575060398482815181101515610eed57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1611155b15611015578115610f84576000861415610f7a576110af565b8580600190039650505b600a8302925060308482815181101515610f9a57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1603830192506110a2565b602e848281518110151561102557fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f0100000000000000000000000000000000000000000000000000000000000000027f0100000000000000000000000000000000000000000000000000000000000000900460ff1614156110a157600191505b5b8080600101915050610e4a565b5060008511156110c25784600a0a820291505b81935050505092915050565b6000806110ee731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610e17565b111561119057731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506111876040805190810160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611625565b60019050611622565b60006111af73c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610e17565b11156112515773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112486040805190810160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611625565b60019050611622565b600061127073b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610e17565b11156113125773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113096040805190810160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611625565b60019050611622565b600061133173146500cfd35b22e4a392fe0adc06de1a1368ed48610e17565b11156113d35773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113ca6040805190810160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611625565b60019050611622565b60006113f273a2998efd205fb9d4b4963afb70778d6354ad3a41610e17565b11156114945773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061148b6040805190810160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611625565b60019050611622565b60006114b3736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610e17565b111561151757736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611622565b60006115367320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610e17565b111561159a577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611622565b60006115b97351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610e17565b111561161d577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611622565b600090505b90565b806002908051906020019061163b92919061163f565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061168057805160ff19168380011785556116ae565b828001600101855582156116ae579182015b828111156116ad578251825591602001919060010190611692565b5b5090506116bb91906116bf565b5090565b6116e191905b808211156116dd5760008160009055506001016116c5565b5090565b9056fea165627a7a72305820a61b7ac4be0c7b6a1c5460c2cd701e3a35040b5c7ad867c37ea0c12e5a40967d0029",
  "sourceMap": "139:714:3:-;;;299:134;8:9:-1;5:2;;;30:1;27;20:12;5:2;299:134:3;362:42;334:3;;:71;;;;;;;;;;;;;;;;;;139:714;;;;;;",
  "deployedSourceMap": "139:714:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:220;;8:9:-1;5:2;;;30:1;27;20:12;5:2;439:220:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;439:220:3;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;439:220:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;439:220:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;439:220:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;439:220:3;;;;;;;;;;;;;;;;;;15575:169:4;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15575:169:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15575:169:4;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15575:169:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15575:169:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15575:169:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15575:169:4;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15575:169:4;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15575:169:4;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15575:169:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15575:169:4;;;;;;;;;;;;;;;;;;665:186:3;;;;;;182:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:23:3;;;;;;;;;;;;;;;;;;;;;;;439:220;535:20;:18;:20::i;:::-;521:34;;:10;:34;;;;518:47;;;557:8;;;518:47;584:23;599:7;584:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;584:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;635:17;644:7;635:8;:17::i;:::-;621:11;:31;;;;439:220;;:::o;15575:169:4:-;;;;:::o;665:186:3:-;717:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:58::i;:::-;;665:186::o;182:23::-;;;;:::o;37769:132:4:-;37829:24;12138:1;12114:26;;12122:3;;;;;;;;;;;12114:26;;;12113:64;;;;12175:1;12146:25;12166:3;;;;;;;;;;;12146:11;:25::i;:::-;:30;12113:64;12109:132;;;12194:35;11760:1;12194:19;:35::i;:::-;;12109:132;12276:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12276:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12276:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12276:16:4;;;;;;;;;;;;;;;;12255:37;;12263:8;;;;;;;;;;;12255:37;;;;12251:108;;;12330:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12330:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12330:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12330:16:4;;;;;;;;;;;;;;;;12309:8;;:38;;;;;;;;;;;;;;;;;;12251:108;37873:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37873:20:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37873:20:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37873:20:4;;;;;;;;;;;;;;;;37866:27;;37769:132;:::o;43630:117::-;43689:15;43724;43733:2;43737:1;43724:8;:15::i;:::-;43717:22;;43630:117;;;:::o;16111:359::-;16212:11;12138:1;12114:26;;12122:3;;;;;;;;;;;12114:26;;;12113:64;;;;12175:1;12146:25;12166:3;;;;;;;;;;;12146:11;:25::i;:::-;:30;12113:64;12109:132;;;12194:35;11760:1;12194:19;:35::i;:::-;;12109:132;12276:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12276:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12276:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12276:16:4;;;;;;;;;;;;;;;;12255:37;;12263:8;;;;;;;;;;;12255:37;;;;12251:108;;;12330:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12330:16:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12330:16:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12330:16:4;;;;;;;;;;;;;;;;12309:8;;:38;;;;;;;;;;;;;;;;;;12251:108;16236:10;16249:8;;;;;;;;;;;:17;;;16267:11;16249:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16249:30:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16249:30:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16249:30:4;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16249:30:4;;;;;;;;;;;;;;;;16236:43;;16326:6;16312:11;:20;16302:7;:30;16294:5;:38;16290:106;;;16356:1;16349:8;;;;;;;16290:106;16413:8;;;;;;;;;;;:14;;;16434:5;16441:1;16444:11;16457:4;16413:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16413:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16413:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16413:49:4;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16413:49:4;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16413:49:4;;;;;;;;;;;;;;;;16406:56;;;12369:1;16111:359;;;;:::o;37909:151::-;37968:10;38036:5;38024:18;38015:27;;38000:53;;;:::o;12863:202::-;12928:16;12962:21;:19;:21::i;:::-;12955:28;;12863:202;;;:::o;43755:819::-;43823:15;43851:20;43880:2;43851:32;;43894:9;43906:1;43894:13;;43918;43934:5;43918:21;;43955:6;43964:1;43955:10;;43950:530;43971:7;:14;43967:1;:18;43950:530;;;44039:2;44023:7;44031:1;44023:10;;;;;;;;;;;;;;;;;;;;44017:17;;;44012:23;;:29;;44011:66;;;;;44074:2;44058:7;44066:1;44058:10;;;;;;;;;;;;;;;;;;;;44052:17;;;44047:23;;:29;;44011:66;44007:462;;;44102:8;44098:181;;;44144:1;44138:2;:7;44134:126;;;44173:5;;44134:126;44233:4;;;;;;;;44098:181;44305:2;44297:10;;;;44360:2;44345:7;44353:1;44345:10;;;;;;;;;;;;;;;;;;;;44339:17;;;44334:23;;:28;44326:36;;;;44007:462;;;44415:2;44399:7;44407:1;44399:10;;;;;;;;;;;;;;;;;;;;44393:17;;;44388:23;;:29;44384:85;;;44449:4;44438:15;;44384:85;44007:462;43987:3;;;;;;;43950:530;;;;44499:1;44494:2;:6;44490:55;;;44531:2;44525;:8;44517:16;;;;44490:55;44562:4;44555:11;;;;;43755:819;;;;:::o;13349:2086::-;13398:16;13489:1;13431:55;13443:42;13431:11;:55::i;:::-;:59;13427:252;;;13545:42;13517:3;;:71;;;;;;;;;;;;;;;;;;13603:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13663:4;13656:11;;;;13427:252;13751:1;13693:55;13705:42;13693:11;:55::i;:::-;:59;13689:261;;;13815:42;13787:3;;:71;;;;;;;;;;;;;;;;;;13873:39;;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13934:4;13927:11;;;;13689:261;14022:1;13964:55;13976:42;13964:11;:55::i;:::-;:59;13960:256;;;14084:42;14056:3;;:71;;;;;;;;;;;;;;;;;;14142:36;;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;14200:4;14193:11;;;;13960:256;14288:1;14230:55;14242:42;14230:11;:55::i;:::-;:59;14226:260;;;14352:42;14324:3;;:71;;;;;;;;;;;;;;;;;;14410:38;;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14470:4;14463:11;;;;14226:260;14558:1;14500:55;14512:42;14500:11;:55::i;:::-;:59;14496:258;;;14621:42;14593:3;;:71;;;;;;;;;;;;;;;;;;14679:37;;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14738:4;14731:11;;;;14496:258;14826:1;14768:55;14780:42;14768:11;:55::i;:::-;:59;14764:207;;;14890:42;14862:3;;:71;;;;;;;;;;;;;;;;;;14955:4;14948:11;;;;14764:207;15043:1;14985:55;14997:42;14985:11;:55::i;:::-;:59;14981:206;;;15106:42;15078:3;;:71;;;;;;;;;;;;;;;;;;15171:4;15164:11;;;;14981:206;15259:1;15201:55;15213:42;15201:11;:55::i;:::-;:59;15197:208;;;15324:42;15296:3;;:71;;;;;;;;;;;;;;;;;;15389:4;15382:11;;;;15197:208;15422:5;15415:12;;13349:2086;;:::o;13073:127::-;13179:13;13155:21;:37;;;;;;;;;;;;:::i;:::-;;13073:127;:::o;139:714:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport \"./oraclizeAPI_0.5.sol\";\n\n//WeatherContract.deployed().then(function(instance) {return instance.update()})\n\ncontract WeatherContract is usingOraclize{\nuint public temperature;\n\nevent NewOraclizeQuery(string description);\nevent NewTemperature(string temperature);\n\n    constructor() public\n    {\n        OAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n        // update();\n    }\n\n    function __callback(bytes32 _myid, string memory _result) public\n    {\n        if(msg.sender != oraclize_cbAddress()) revert();\n            emit NewTemperature(_result);\n            temperature = parseInt(_result);\n    }\n\n    function update() public payable\n    {\n        emit NewOraclizeQuery(\"Query was sent waiting for response....\");\n        oraclize_query(\"WolframAlpha\", \"Temperature in Rotterdam\");\n    }\n}",
  "sourcePath": "/home/debreker/Dev/school/WeatherWars/contracts/WeatherContract.sol",
  "ast": {
    "absolutePath": "/home/debreker/Dev/school/WeatherWars/contracts/WeatherContract.sol",
    "exportedSymbols": {
      "WeatherContract": [
        235
      ]
    },
    "id": 236,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 171,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/debreker/Dev/school/WeatherWars/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 172,
        "nodeType": "ImportDirective",
        "scope": 236,
        "sourceUnit": 6523,
        "src": "24:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 173,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6522,
              "src": "167:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6522",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 174,
            "nodeType": "InheritanceSpecifier",
            "src": "167:13:3"
          }
        ],
        "contractDependencies": [
          6522
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 235,
        "linearizedBaseContracts": [
          235,
          6522
        ],
        "name": "WeatherContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 176,
            "name": "temperature",
            "nodeType": "VariableDeclaration",
            "scope": 235,
            "src": "182:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 175,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "182:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 180,
            "name": "NewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "231:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "230:20:3"
            },
            "src": "208:43:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 184,
            "name": "NewTemperature",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "name": "temperature",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "273:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "272:20:3"
            },
            "src": "252:41:3"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "324:109:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "334:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$359",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "362:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 188,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "340:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$359_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "340:65:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$359",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "334:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$359",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "334:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 193,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "415:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "415:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "415:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 194,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:3"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:3"
            },
            "scope": 235,
            "src": "299:134:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "508:151:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "521:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "521:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 203,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4345,
                        "src": "535:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "535:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "521:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 209,
                  "nodeType": "IfStatement",
                  "src": "518:47:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 206,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6542,
                          6543
                        ],
                        "referencedDeclaration": 6542,
                        "src": "557:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "557:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 208,
                    "nodeType": "ExpressionStatement",
                    "src": "557:8:3"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "599:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 210,
                      "name": "NewTemperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "584:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "EmitStatement",
                  "src": "579:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 214,
                      "name": "temperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "621:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "644:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 215,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5178,
                          5295
                        ],
                        "referencedDeclaration": 5178,
                        "src": "635:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) pure returns (uint256)"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "635:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "621:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "621:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "name": "_myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "459:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "474:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "458:38:3"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:3"
            },
            "scope": 235,
            "src": "439:220:3",
            "stateMutability": "nonpayable",
            "superFunction": 1258,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "702:149:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5175657279207761732073656e742077616974696e6720666f7220726573706f6e73652e2e2e2e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "734:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05e483ae16b6ae7672ba9234c6f430ded92e0d8440cd7b83502e1c4b586eb8a7",
                          "typeString": "literal_string \"Query was sent waiting for response....\""
                        },
                        "value": "Query was sent waiting for response...."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_05e483ae16b6ae7672ba9234c6f430ded92e0d8440cd7b83502e1c4b586eb8a7",
                          "typeString": "literal_string \"Query was sent waiting for response....\""
                        }
                      ],
                      "id": 224,
                      "name": "NewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "717:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "712:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576f6c6672616d416c706861",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "801:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        "value": "WolframAlpha"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54656d706572617475726520696e20526f7474657264616d",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "817:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5b2af0d1b835e8eb39b60679b151442c6053d452878f8dc754dfc284bd3c632",
                          "typeString": "literal_string \"Temperature in Rotterdam\""
                        },
                        "value": "Temperature in Rotterdam"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5b2af0d1b835e8eb39b60679b151442c6053d452878f8dc754dfc284bd3c632",
                          "typeString": "literal_string \"Temperature in Rotterdam\""
                        }
                      ],
                      "id": 228,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1349,
                        1392,
                        1439,
                        1484,
                        1528,
                        1574,
                        1624,
                        1672,
                        1720,
                        1770,
                        1824,
                        1876,
                        1913,
                        1953,
                        1996,
                        2036,
                        2081,
                        2129,
                        2180,
                        2228,
                        2281,
                        2337,
                        2396,
                        2452,
                        2513,
                        2577,
                        2644,
                        2708,
                        2777,
                        2849,
                        2924,
                        2996,
                        3044,
                        3094,
                        3148,
                        3200,
                        3237,
                        3277,
                        3320,
                        3360,
                        3405,
                        3453,
                        3504,
                        3552,
                        3605,
                        3661,
                        3720,
                        3776,
                        3837,
                        3901,
                        3968,
                        4032,
                        4101,
                        4173,
                        4248,
                        4320
                      ],
                      "referencedDeclaration": 1349,
                      "src": "786:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "786:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "786:58:3"
                }
              ]
            },
            "documentation": null,
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:2:3"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:0:3"
            },
            "scope": 235,
            "src": "665:186:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 236,
        "src": "139:714:3"
      }
    ],
    "src": "0:853:3"
  },
  "legacyAST": {
    "absolutePath": "/home/debreker/Dev/school/WeatherWars/contracts/WeatherContract.sol",
    "exportedSymbols": {
      "WeatherContract": [
        235
      ]
    },
    "id": 236,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 171,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "/home/debreker/Dev/school/WeatherWars/contracts/oraclizeAPI_0.5.sol",
        "file": "./oraclizeAPI_0.5.sol",
        "id": 172,
        "nodeType": "ImportDirective",
        "scope": 236,
        "sourceUnit": 6523,
        "src": "24:31:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 173,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 6522,
              "src": "167:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$6522",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 174,
            "nodeType": "InheritanceSpecifier",
            "src": "167:13:3"
          }
        ],
        "contractDependencies": [
          6522
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 235,
        "linearizedBaseContracts": [
          235,
          6522
        ],
        "name": "WeatherContract",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 176,
            "name": "temperature",
            "nodeType": "VariableDeclaration",
            "scope": 235,
            "src": "182:23:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 175,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "182:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 180,
            "name": "NewOraclizeQuery",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 178,
                  "indexed": false,
                  "name": "description",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "231:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 177,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "231:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "230:20:3"
            },
            "src": "208:43:3"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 184,
            "name": "NewTemperature",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 182,
                  "indexed": false,
                  "name": "temperature",
                  "nodeType": "VariableDeclaration",
                  "scope": 184,
                  "src": "273:18:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 181,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "273:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "272:20:3"
            },
            "src": "252:41:3"
          },
          {
            "body": {
              "id": 193,
              "nodeType": "Block",
              "src": "324:109:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 187,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "334:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$359",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "362:42:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 188,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "340:21:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$359_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "340:65:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$359",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "334:71:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$359",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "334:71:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 193,
                      "name": "update",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 237,
                      "src": "415:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "415:8:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 195,
                  "nodeType": "ExpressionStatement",
                  "src": "415:8:3"
                }
              ]
            },
            "documentation": null,
            "id": 194,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "310:2:3"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "324:0:3"
            },
            "scope": 235,
            "src": "299:134:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "508:151:3",
              "statements": [
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 201,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6537,
                        "src": "521:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 202,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "521:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 203,
                        "name": "oraclize_cbAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4345,
                        "src": "535:18:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                          "typeString": "function () returns (address)"
                        }
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "535:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "521:34:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 209,
                  "nodeType": "IfStatement",
                  "src": "518:47:3",
                  "trueBody": {
                    "expression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 206,
                        "name": "revert",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6542,
                          6543
                        ],
                        "referencedDeclaration": 6542,
                        "src": "557:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "557:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 208,
                    "nodeType": "ExpressionStatement",
                    "src": "557:8:3"
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 211,
                        "name": "_result",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 198,
                        "src": "599:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 210,
                      "name": "NewTemperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "584:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "584:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 213,
                  "nodeType": "EmitStatement",
                  "src": "579:28:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 214,
                      "name": "temperature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 176,
                      "src": "621:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 216,
                          "name": "_result",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 198,
                          "src": "644:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 215,
                        "name": "parseInt",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          5178,
                          5295
                        ],
                        "referencedDeclaration": 5178,
                        "src": "635:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) pure returns (uint256)"
                        }
                      },
                      "id": 217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "635:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "621:31:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "621:31:3"
                }
              ]
            },
            "documentation": null,
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 196,
                  "name": "_myid",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "459:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "459:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 198,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "474:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 197,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "458:38:3"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "508:0:3"
            },
            "scope": 235,
            "src": "439:220:3",
            "stateMutability": "nonpayable",
            "superFunction": 1258,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "702:149:3",
              "statements": [
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "5175657279207761732073656e742077616974696e6720666f7220726573706f6e73652e2e2e2e",
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "734:41:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_05e483ae16b6ae7672ba9234c6f430ded92e0d8440cd7b83502e1c4b586eb8a7",
                          "typeString": "literal_string \"Query was sent waiting for response....\""
                        },
                        "value": "Query was sent waiting for response...."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_05e483ae16b6ae7672ba9234c6f430ded92e0d8440cd7b83502e1c4b586eb8a7",
                          "typeString": "literal_string \"Query was sent waiting for response....\""
                        }
                      ],
                      "id": 224,
                      "name": "NewOraclizeQuery",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "717:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "717:59:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 227,
                  "nodeType": "EmitStatement",
                  "src": "712:64:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "576f6c6672616d416c706861",
                        "id": 229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "801:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        "value": "WolframAlpha"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54656d706572617475726520696e20526f7474657264616d",
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "817:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e5b2af0d1b835e8eb39b60679b151442c6053d452878f8dc754dfc284bd3c632",
                          "typeString": "literal_string \"Temperature in Rotterdam\""
                        },
                        "value": "Temperature in Rotterdam"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                          "typeString": "literal_string \"WolframAlpha\""
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e5b2af0d1b835e8eb39b60679b151442c6053d452878f8dc754dfc284bd3c632",
                          "typeString": "literal_string \"Temperature in Rotterdam\""
                        }
                      ],
                      "id": 228,
                      "name": "oraclize_query",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1349,
                        1392,
                        1439,
                        1484,
                        1528,
                        1574,
                        1624,
                        1672,
                        1720,
                        1770,
                        1824,
                        1876,
                        1913,
                        1953,
                        1996,
                        2036,
                        2081,
                        2129,
                        2180,
                        2228,
                        2281,
                        2337,
                        2396,
                        2452,
                        2513,
                        2577,
                        2644,
                        2708,
                        2777,
                        2849,
                        2924,
                        2996,
                        3044,
                        3094,
                        3148,
                        3200,
                        3237,
                        3277,
                        3320,
                        3360,
                        3405,
                        3453,
                        3504,
                        3552,
                        3605,
                        3661,
                        3720,
                        3776,
                        3837,
                        3901,
                        3968,
                        4032,
                        4101,
                        4173,
                        4248,
                        4320
                      ],
                      "referencedDeclaration": 1349,
                      "src": "786:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory,string memory) returns (bytes32)"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "786:58:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "786:58:3"
                }
              ]
            },
            "documentation": null,
            "id": 234,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "update",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "680:2:3"
            },
            "returnParameters": {
              "id": 223,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "702:0:3"
            },
            "scope": 235,
            "src": "665:186:3",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 236,
        "src": "139:714:3"
      }
    ],
    "src": "0:853:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x08D7f8f321e944e3BD6A65B5a8dF7137f856C136",
      "transactionHash": "0xc0cd1d86f504a982c8879fd727eadd8790cf8878d2c317b8691c97d27a73c326"
    }
  },
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-05-13T15:45:55.606Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}